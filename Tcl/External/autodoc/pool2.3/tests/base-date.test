# -*- tcl -*-
# Commands covered:	::pool::date::*
#
# This file contains a collection of tests for one or more of the commands
# the Pool package. Sourcing this file into Tcl runs the tests and generates
# output for errors.  No output means no errors were found.
#
# Copyright (c) 1998 Andreas Kupries (a.kupries@westend.com)
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
# $Id: base-date.test,v 1.1 1998/06/01 19:57:06 aku Exp $

if {[string compare test [info procs test]] == 1} then {source defs}


foreach {i x r} {
    0 {}        {}
    1 0         0
    2 01        1
    3 100       100
    4 00003405  3405
    5 000000    0
} {
    test base-date-1.$i {strip leading zeroes} {
	set result [::pool::date::StripLeadingZeros $x]
    } $r
}



test base-date-2.0 {join} {
    set result [::pool::date::join 1998 4 1]
} {04/01/1998}

test base-date-2.1 {split} {
    ::pool::date::split {04/01/1998} y m d
    set result [list $y $m $d]
} {1998 4 1}

test base-date-2.2 {split/join complementarity} {
    set dt [::pool::date::now]
    ::pool::date::split $dt y m d
    set dtb [::pool::date::join $y $m $d]
    set result [string compare $dt $dtb]
} {0}

test base-date-2.3 {joinMonth} {
    set result [::pool::date::joinMonth 1998 4]
} {04/1998}

test base-date-2.4 {splitMonth} {
    ::pool::date::splitMonth {04/1998} y m
    set result [list $y $m]
} {1998 4}

test base-date-2.5 {joinMonthDay} {
    set result [::pool::date::joinMonthDay 04/1998 1]
} {04/01/1998}

test base-date-2.6 {2month} {
    set result [::pool::date::2month {04/01/1998}]
} {04/1998}

test base-date-2.7 {monthFirstDay} {
    set result [::pool::date::monthFirstDay {04/1998}]
} {04/01/1998}

test base-date-2.8 {monthLastDay} {
    set result [::pool::date::monthLastDay {04/1998}]
} {04/30/1998}

test base-date-2.9 {index} {
    set result [::pool::date::index {04/05/1998}]
} {95}


# no tests of now, nowTime

foreach {i x r} {
    0 1994 0
    1 1995 0
    2 1998 0
    3 1996 1
    4 2000 1
    5 2001 0
    6 1900 0
    7 1800 0
    8 1802 0
    9 1804 1
} {
    test base-date-3.$i {leapYearstrip leading zeroes} {
	set result [::pool::date::leapYear $x]
    } $r
}

# => yearLength, monthLength are derived

# monthName, monthNumber, weekdayName <= tables
# eq, le, lt, gt, ge, ne, leMonth, next, prev

test base-date-4.0 {nextMonth} {
    set result [::pool::date::nextMonth {04/1998}]
} {05/1998}

test base-date-4.1 {prevMonth} {
    set result [::pool::date::prevMonth {04/1998}]
} {03/1998}

# intervalIsMonth/Year, isYearStart

unset result y m d i x r dt dtb

