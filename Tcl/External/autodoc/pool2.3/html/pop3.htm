<html><head><title>POP3 system</title><link rel=stylesheet href="styles.css"
type="text/css"></head><body ><h1>POP3 system</h1><hr class="navbar"><p class="navbar"><a href="index.htm" class="navbar">Home</a> | <a href="packages.html" class="index-package">Packages</a> | <a href="files.html" class="index-file">Files</a> | <a href="procs.html" class="index-procedure">Procedures</a> | <a href="classes.html" class="index-class">Classes</a> | <a href="namespaces.html" class="index-namespace">Namespaces</a> | <a href="keywords.html" class="index-keyword">Keywords</a> | <a href="deps.html" class="index-dependency">External packages</a></p><hr class="navbar"><p>The implementation of the pop3 protocol (client and server) for mail retrieval
is spread over 16 files.</p><p>We have 2 shared files (<a href="f_net_pop3_port.tcl.html" class="file">net/pop3/port.tcl</a> and <a href="f_net_pop3_auth.tcl.html" class="file">net/pop3/auth.tcl</a>), they contain the port definition and a type
checker for the possible authentication modes (APOP vs USER/PASS).</p><p>After that there are 3 base classes defining the interface between the two
cores (client, server) and their external supporters.</p><ul><li>For the server we have <a href="cpopServerStorageBase.html" class="file">net/pop3/svrStorBase.cls</a>, it defines the
interface between the pop server and the storage system the mails to be
tretrieved reside in.<li>On the other hand, the client uses object whose classes are derived from <a href="cpopClientMsgClassificatorBase.html" class="file">net/pop3/classifyBase.cls</a> and <a href="cpopClientStorageBase.html" class="file">net/pop3/cltStorBase.cls</a>to classify and store the incoming mails.</ul><p>Seven files define the various sequencers actually executing the
command/reply-chains the pop protocol is made of. With the exception of the
login sequencers every operation utilizes only a single command. Their
implementation is built on top of the general <a href="csequencer.html" class="class">sequencer</a> framework
and and POP specific baseclass in <a href="cpop3Sequencer.html" class="file">net/pop3/seq.cls</a>.</p><table border><tr><th>File</th><th>Operation</th><th>POP3 command(s)</th></tr><tr><td><a href="cpop3Sequencer.html" class="file">net/pop3/seq.cls</a></td><td>Contains common functionality of all POP sequencers</td><td>-</td></tr><tr><td><a href="cpop3OpenSeq.html" class="file">net/pop3/open.cls</a></td><td>Open connection to a server</td><td>-</td></tr><tr><td><a href="cpop3ApopSeq.html" class="file">net/pop3/apop.cls</a></td><td>Login to server. This uses the packages <a href="http://www.oche.de/~akupries/soft/trf/index.html" class="xref-dep">Trf</a> and <a href="http://www.oche.de/~akupries/tcltk.html" class="xref-dep">Memchan</a> to generate the necessary hashvalue (and hex-encoded
MD5 hash)</td><td>APOP, STAT</td></tr><tr><td><a href="cpop3UserSeq.html" class="file">net/pop3/user.cls</a></td><td>Login to server</td><td>USER, PASS, STAT</td></tr><tr><td><a href="cpop3TopSeq.html" class="file">net/pop3/top.cls</a></td><td>Query for header of mail message</td><td>TOP</td></tr><tr><td><a href="cpop3RetrSeq.html" class="file">net/pop3/retr.cls</a></td><td>Retrieve complete mail message from server</td><td>RETR (TOP)</td></tr><tr><td><a href="cpop3DeleteSeq.html" class="file">net/pop3/dele.cls</a></td><td>Delete message at server</td><td>DELE</td></tr><tr><td><a href="cpop3CloseSeq.html" class="file">net/pop3/close.cls</a></td><td>Close connection to server</td><td>QUIT</td></tr></table><p>All sequencers understand the options <a href="cpop3Sequencer.html" class="class">pop3Sequencer</a>:<a href="cpop3Sequencer.html#oconn" class="xref-oref">conn</a>,<a href="cpop3Sequencer.html" class="class">pop3Sequencer</a>:<a href="cpop3Sequencer.html#odone" class="xref-oref">done</a> and <a href="cpop3Sequencer.html" class="class">pop3Sequencer</a>:<a href="cpop3Sequencer.html#osock" class="xref-oref">sock</a>. The value
of the first refers back to the connection object which initiated the
sequencer, the second names the method to call in that object after the
sequencer has done its work. The last specifies the channel used to talk to
the POP server. Of course, <a href="csequencer.html" class="class">sequencer</a>:<a href="csequencer.html#otimeout" class="xref-oref">timeout</a> is understood too.</p><p>To get a connection to the pop server the open sequencer has to know the host
to connect to (<a href="cpop3OpenSeq.html" class="class">pop3OpenSeq</a>:<a href="cpop3OpenSeq.html#ohost" class="xref-oref">host</a>), the maximum number of tries
before giving up (<a href="cpop3OpenSeq.html" class="class">pop3OpenSeq</a>:<a href="cpop3OpenSeq.html#omaxtries" class="xref-oref">maxtries</a>) and the delay between
tries (optionRef pop3OpenSeq retrydelay]). The latter is given in milliseconds.</p><p>Both login sequencers (<a href="cpop3ApopSeq.html" class="file">net/pop3/apop.cls</a>,<a href="cpop3UserSeq.html" class="file">net/pop3/user.cls</a>) understand <a href="cpop3ApopSeq.html" class="class">pop3ApopSeq</a>:<a href="cpop3ApopSeq.html#ouser" class="xref-oref">user</a> and <a href="cpop3ApopSeq.html" class="class">pop3ApopSeq</a>:<a href="cpop3ApopSeq.html#osecret" class="xref-oref">secret</a> as the way to specify the name of the user
trying to login to the server, and its password. The APOP sequencer
additionally uses <a href="cpop3ApopSeq.html" class="class">pop3ApopSeq</a>:<a href="cpop3ApopSeq.html#ogreeting" class="xref-oref">greeting</a> to get at the greeting sent
by the server, and the timestamp buried in it, as it is essential in the
generation of the hashvalue encoding the password.</p><p>All sequencers executing message specific operations
(<a href="cpop3RetrSeq.html" class="file">net/pop3/retr.cls</a>, <a href="cpop3TopSeq.html" class="file">net/pop3/top.cls</a> and <a href="cpop3DeleteSeq.html" class="file">net/pop3/dele.cls</a>) additionally understand the option <a href="cpop3DeleteSeq.html" class="class">pop3DeleteSeq</a>:<a href="cpop3DeleteSeq.html#omsg" class="xref-oref">msg</a> which specifies the numerical index of the
message to operate on.</p><p>The retrieve sequencer (<a href="cpop3RetrSeq.html" class="file">net/pop3/retr.cls</a>) is special in that he
understands one more option, <a href="cpop3RetrSeq.html" class="class">pop3RetrSeq</a>:<a href="cpop3RetrSeq.html#ouse-top" class="xref-oref">use-top</a>. This is a
boolean flag, with a default value of <b>false</b>. Setting it to <b>true</b> forces the sequencer to use the command 'TOP x 0' instead of
'RETR x'. I added it because my provider had a brain dead pop3 server for some
time. It did not accept RETR, but delivered the whole mail if 0 was given as
second argument to TOP. I don't know wether similar versions of this server
are lurking out there, but better be prepared. This option should be left
alone under normal circumstances.</p><p>The close sequencer makes no use of additional options.</p><p>The remaining files implement the server core (<a href="cpop3Server.html" class="file">net/pop3/server.cls</a>)
and the client. The latter is split into two classes, a baseclass
encapsulating the access to the various sequencers
(<a href="cpop3Connection.html" class="file">net/pop3/pop3.cls</a>), thus managing a single POP connection, and
based on that the core and its statemachine itself
(<a href="cpop3Client.html" class="file">net/pop3/client.cls</a>).</p><p>The phrase <b>core</b> means that the associated classes manage all aspects of running the pop protocol by themselves, but rely on external objects to handle the following tasks:</p><ul><li>management of a user database <li>access to stored messages <li>classification of messages into the categories 'retrieve', 'delete'
and 'ignore'<li>storing retrieved messages in some manner</ul><p><a href="pop3s.htm" class="xref-xref">POP3 server core</a>, resp. <a href="pop3c.htm" class="xref-xref">POP3 client core</a> will be discussed in more detail at the
refered pages.</p><hr><p class="generated-by">Generated by <a href="http://www.oche.de/~akupries/soft/autodoc/index.htm" class="generated-by">AutoDoc 2.4</a> at 09/14/2000, invoked by <a href="mailto:a.kupries@westend.com" class="generated-by">Andreas Kupries</a></p></body></html>